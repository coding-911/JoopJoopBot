[tool.poetry]
name = "joopjoop-api"
version = "1.0.0"
description = "금융 데이터 기반 Q&A 및 리포트 생성 API"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false
packages = [{include = "app"}]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.11"
joopjoop-core = {path = "../../packages/joopjoop-core", develop = true}
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
langchain = "^0.1.0"
langchain-community = "^0.0.24"
langchain-core = "^0.1.27"
chromadb = "^0.4.15"
sentence-transformers = "^4.1.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.6"
jinja2 = "^3.1.2"
weasyprint = "^60.1"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.23"}
alembic = "^1.12.1"
asyncpg = "^0.29.0"
redis = "^5.0.1"
celery = "^5.3.4"
prometheus-client = "^0.17.1"
sentry-sdk = "^1.32.0"
python-dateutil = "^2.8.2"
aiohttp = "^3.8.6"
beautifulsoup4 = "^4.12.0"
pandas = "^2.2.0"
numpy = "^1.26.0"
openpyxl = "^3.1.2"
idna = "^3.6"
httpx = {extras = ["http2"], version = "^0.28.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.10.1"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.6.1"
pre-commit = "^3.5.0"
faker = "^19.12.0"
factory-boy = "^3.3.0"
aioresponses = "^0.7.4"
types-python-dateutil = "^2.8.19.14"
types-redis = "^4.6.0.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=app --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

